openapi: 3.0.0
info:
  title: Inspection System API
  version: 1.1.0
servers:
  - url: https://api.example.com/v1
paths:
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
  /auth/reset-password-request:
    post:
      summary: Запрос на восстановление пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Письмо отправлено
        '400':
          description: Ошибка обработки запроса
  /auth/reset-password-confirm:
    post:
      summary: Подтверждение восстановления пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Пароль обновлён
        '400':
          description: Неверный или просроченный токен
  /clients:
    post:
      summary: Регистрация нового клиента
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                tin:
                  type: string
                type:
                  type: string
                  enum: [ "legal person", "individual" ]
      responses:
        '201':
          description: Клиент успешно зарегистрирован
        '400':
          description: Ошибка регистрации
        '409':
          description: Клиент с таким email или ИНН уже существует
  /clients/trial:
    post:
      summary: Start a trial subscription
      responses:
        '200':
          description: Trial activated
  /licenses:
    get:
      summary: Get available licenses
      responses:
        '200':
          description: List of licenses
    post:
      summary: Purchase a license
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                licenseType:
                  type: string
                paymentMethod:
                  type: string
      responses:
        '201':
          description: License purchased
  /users:
    get:
      summary: Get users list
      responses:
        '200':
          description: List of users
  /users/{userId}/role:
    put:
      summary: Update user role
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
      responses:
        '200':
          description: Role updated
  /users/{userId}:
    delete:
      summary: Delete a user account
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted
  /users/sub-account:
    post:
      summary: Admin registers a sub-account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                role:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Sub-account created
  /cameras:
    post:
      summary: Add a new camera
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string
                ip:
                  type: string
      responses:
        '201':
          description: Camera added
  /inspections:
    post:
      summary: Submit an inspection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                metadata:
                  type: object
      responses:
        '200':
          description: Inspection submitted
  /defects:
    get:
      summary: Get detected defects
      responses:
        '200':
          description: List of defects
  /ai/config:
    put:
      summary: Update AI defect sensitivity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sensitivity:
                  type: object
      responses:
        '200':
          description: AI settings updated
  /analytics/export:
    get:
      summary: Export analytics data
      parameters:
        - name: format
          in: query
          required: true
          schema:
            type: string
            enum:
              - pdf
              - excel
      responses:
        '200':
          description: Exported analytics file
  /payments/create-session:
    post:
      summary: Создание сессии оплаты
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tariff_id:
                  type: integer
      responses:
        '201':
          description: Ссылка на оплату создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_url:
                    type: string
                  amount:
                    type: integer
        '403':
          description: Доступ только для владельца
        '400':
          description: Ошибка создания платежа
  /payments/webhook:
    post:
      summary: Обработка уведомления об оплате от FreeKassa
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                MERCHANT_ID:
                  type: string
                AMOUNT:
                  type: string
                MERCHANT_ORDER_ID:
                  type: string
                SIGN:
                  type: string
      responses:
        '200':
          description: Успешно обработано (ожидается ответ YES)
        '400':
          description: Ошибка проверки подписи или данных