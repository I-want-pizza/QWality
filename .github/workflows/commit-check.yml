name: Conventional Commits Check
on: [push, pull_request]

jobs:
  check-commits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Validate commit messages
        run: |
          TYPES="chore|docs|feat|fix|refactor|revert|style|test"
          HEADER_PATTERN="^($TYPES)(\([a-z0-9-]+\))?:[[:space:]]*.+"
          FOOTER_PATTERN="^[A-Z]+-[0-9]+$"
          
          ERROR_MSG="‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–º–∏—Ç–∞! –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
          1. –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: <—Ç–∏–ø>(<–æ–±–ª–∞—Å—Ç—å>): <–æ–ø–∏—Å–∞–Ω–∏–µ>
             –ü—Ä–∏–º–µ—Ä: 'fix: –∏—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥' –∏–ª–∏ 'feat(api): –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥'
             –î–æ–ø—É—Å–∫–∞–µ—Ç—Å—è: 'fix: fix regex'
          2. –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞: 'QW-52' (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
          3. –ú–µ–∂–¥—É –Ω–∏–º–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±–æ–π —Ç–µ–∫—Å—Ç (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è)"

          echo "üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ç–∫–∏:"
          git branch -r
          echo "üîç GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
          echo "üîç GITHUB_BEFORE: $GITHUB_BEFORE"
          echo "üîç GITHUB_SHA: $GITHUB_SHA"

          if [ "$GITHUB_EVENT_NAME" = "push" ]; then
            COMMIT_SHAS=$(jq -r '.commits[].id' "$GITHUB_EVENT_PATH")
          else
            echo "üîç GITHUB_BASE_REF: $GITHUB_BASE_REF"
            echo "üîç GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
            git fetch origin $GITHUB_BASE_REF:refs/heads/$GITHUB_BASE_REF
            git fetch origin $GITHUB_HEAD_REF:refs/heads/$GITHUB_HEAD_REF
            echo "üîç –õ–æ–∫–∞–ª—å–Ω—ã–µ –≤–µ—Ç–∫–∏ –ø–æ—Å–ª–µ fetch:"
            git branch
            COMMIT_SHAS=$(git rev-list --no-merges refs/heads/$GITHUB_BASE_REF..refs/heads/$GITHUB_HEAD_REF)
          fi

          if [ -z "$COMMIT_SHAS" ]; then
            echo "‚ÑπÔ∏è –ù–µ—Ç –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
            exit 0
          fi

          echo "üîç –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–º–∏—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: $(echo "$COMMIT_SHAS" | wc -l)"
          echo "üîç –°–ø–∏—Å–æ–∫ SHA –∫–æ–º–º–∏—Ç–æ–≤:"
          echo "$COMMIT_SHAS"

          for sha in $COMMIT_SHAS; do
            commit=$(git log -1 --format=%B "$sha")
            echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–º–∏—Ç $sha:"
            echo "---"
            echo "$commit"
            echo "---"
            
            cleaned_commit=$(echo "$commit" | sed '/^$/d')
            first_line=$(echo "$cleaned_commit" | head -n 1)
            last_line=$(echo "$cleaned_commit" | tail -n 1)
            
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–∏—Ç—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å "Merge"
            if [[ "$first_line" =~ ^Merge.* ]]; then
              echo "‚ÑπÔ∏è –ö–æ–º–º–∏—Ç $sha —è–≤–ª—è–µ—Ç—Å—è merge-–∫–æ–º–º–∏—Ç–æ–º, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É"
              continue
            fi
            
            if [ -z "$first_line" ] || [ -z "$last_line" ]; then
              echo "‚ùå –û—à–∏–±–∫–∞: –∫–æ–º–º–∏—Ç –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã—Ö —Å—Ç—Ä–æ–∫"
              echo "---"
              echo "$commit"
              echo "---"
              echo "$ERROR_MSG"
              exit 1
            fi
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç
            if ! [[ "$first_line" =~ $HEADER_PATTERN ]] || ! [[ "$last_line" =~ $FOOTER_PATTERN ]]; then
              echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–º–∏—Ç–µ $sha:"
              echo "---"
              echo "$commit"
              echo "---"
              echo "$ERROR_MSG"
              exit 1
            fi
            echo "‚úÖ –ö–æ–º–º–∏—Ç $sha –≤–∞–ª–∏–¥–µ–Ω"
          done
